- hook addCard dashboard up to db funcs
    - add zod validation to card example before submission
    - hook up snackbars to provide useful errors if validation fails.
    - if validation passes submit card to deck and add new tags to user tags
    - tidy up card example components style
    - componentise all reusable subcomponents
    - use addcarddashboard to create edit card dashboard - should be little to change.
- hook user settings dashboard up to db funcs
- create browse cards dashboard for card editing, deletion etc
- hook browse cards up to db funcs.
- add anki style declarative review answer type, trusting user
- add cloze style answering, both with input answers and declarative answers
- make layout mobile friendly
- make a document fragment system to split large decks over multiple documents
- reorganise filestructure for a feature based system 
- create a request a feature/ report a bug button, that allows users to tell devs about issues or things they want 

- implement redux for storing important information about the user session
- add validation step to deck creation - deck names can't match existing etc

- finish card component
    X - look at schemas on back-end to see what fields should be added.
    X - make the layout respond to card type chosen
    the form should have the exact same layout as the final card - edit should transform card into form with fields autofilled with previous value.
    getting add card done quickly is important as needed to start testing
    - add delete card functionality 
- create deck component
    - like a deck of cards with the front turned over - dect title in middle, titles of cards behind showing like slightly splayed
- create spaced repetition algorithm logic
    - should be relatively straightforward, there was a paper detailing the optimum algorithm.
    - certain new fields may need to be added to card other than review dates etc.
    - consider future parameters for user extension
- add review card functionality
    - will need to tell you how many reviews per deck, how many decks with reviews and total review numbers.
    - will need to add a progress bar which tells you how far through your reviews you are.
X- create user dashboard. great templates available on shadcn blocks
X update welcome card so that reviews are apparent on entering app 
- metrics on usage
- browse cards and decks using shadcn data tables and pagination, clicking one brings it up as a modal for editing.   
- create file upload for mass card import - also necessary for img upload.
- create s3 bucket for image/media storage
    - do proper research ahead of time to secure bucket and limit types of media uploads possible.
    - limit storage dependent on credits.
X - seems to be an error where mongodb doesnt initialise if not via sign in - ie the jwt session is still active from previous log in
- fix session handling/ JWT error so sign out before app close not required for proper sign in on return
- create app logo
- create initial ai contact point for card gen
- create pipeline for saving notes to user db, langchain iteration, flashcard creation, and final user edit/approve stage.
- create a 'find more cards' button, which calls llm, searches based on card content, brings in info and generates cards. should bring in links as well.
-create a create variants ai call that feeds in the card info and creates cards that come at it from other directions.
- create minimal browser extension for dispatching user notes to db
- create browser DNS extension for adding card review rules for certain sites
- create payments system via stripe API so that user can buy credits or a monthly membership.
- create cost breakdown component that calculates cost of credits per action
- create a data-viz page where people can see metrics for their interactions with the app
- create a feature suggestion/ feedback form for users to give tips on how to improve app.
- create make public functionality for decks - allow people to contribute to gated decks by email invite, fully public decks, or make decks forkable - this could even have logic to make you aware of new cards added since you forked - do you want to update by pulling new cards, or alternatively let you know if the deck has been taken private and no further updates
- create store for decks - don't have to be free - they have to sign terms to say they have image rights
- create an in built ai assisted image search for useful reference images for cards.
- add custom log in, log out, error etc. pages for next auth
- extend auth for credentials and sign up, if classic way is difficult, consider creating a custom oauth provider
- consider using leaflet or similar library for user to annotate images
